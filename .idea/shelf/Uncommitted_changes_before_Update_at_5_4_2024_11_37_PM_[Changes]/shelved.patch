Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 071c1ff039a96024850f7cf42a47884471046306)
+++ /dev/null	(revision 071c1ff039a96024850f7cf42a47884471046306)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: src/main/java/Java_coursework/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Java_coursework;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.ButtonBar;\r\nimport javafx.scene.control.ButtonType;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class Game implements Initializable {\r\n    @FXML\r\n    private StackPane contentArea;\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        try {\r\n            // Loading  the initial scene\r\n            loadFXML(\"start-menu.fxml\");\r\n        } catch (IOException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void SHR(ActionEvent event) throws IOException {\r\n        loadFXML(\"Select_Horses_Randomly.fxml\");\r\n    }\r\n\r\n    public void SWH(ActionEvent event) throws IOException {\r\n        loadFXML(\"Select_Winning_Horses.fxml\");\r\n    }\r\n\r\n    public void VWH(ActionEvent event) throws IOException {\r\n        loadFXML(\"View_Winning_Horse.fxml\");\r\n    }\r\n\r\n    private void loadFXML(String fxmlFileName) throws IOException {\r\n        Parent fxml = FXMLLoader.load(getClass().getResource(fxmlFileName));\r\n        contentArea.getChildren().clear();\r\n        contentArea.getChildren().setAll(fxml);\r\n    }\r\n    public void exit(ActionEvent event){\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        alert.setTitle(\"Confirmation Dialog\");\r\n        alert.setHeaderText(\"Are you sure you want to exit?\");\r\n        alert.setContentText(\"Press OK to exit or Cancel to stay.\");\r\n\r\n        // Customizing the buttons in the alert dialog\r\n        ButtonType okButton = new ButtonType(\"OK\");\r\n        ButtonType cancelButton = new ButtonType(\"Cancel\", ButtonBar.ButtonData.CANCEL_CLOSE);\r\n        alert.getButtonTypes().setAll(okButton, cancelButton);\r\n\r\n        // Handling user's choice\r\n        alert.showAndWait().ifPresent(response -> {\r\n            if (response == okButton) {\r\n                // Close the application\r\n                Stage stage = (Stage) contentArea.getScene().getWindow();\r\n                stage.close();\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Java_coursework/Game.java b/src/main/java/Java_coursework/Game.java
--- a/src/main/java/Java_coursework/Game.java	(revision 071c1ff039a96024850f7cf42a47884471046306)
+++ b/src/main/java/Java_coursework/Game.java	(date 1713482440000)
@@ -37,7 +37,7 @@
     }
 
     public void VWH(ActionEvent event) throws IOException {
-        loadFXML("View_Winning_Horse.fxml");
+        loadFXML("Visualize_Winning_Horse.fxml");
     }
 
     private void loadFXML(String fxmlFileName) throws IOException {
Index: src/main/java/Java_coursework/Adding_Horse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Java_coursework;\r\n\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.ChoiceBox;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\n\r\npublic class Adding_Horse implements Initializable {\r\n\r\n    // FXML Variables\r\n    @FXML\r\n    private ChoiceBox<String> group;\r\n    @FXML\r\n    private TextField id;\r\n    @FXML\r\n    private TextField jockey;\r\n    @FXML\r\n    private TextField name;\r\n    @FXML\r\n    private TextField age;\r\n    @FXML\r\n    private TextField breed;\r\n    @FXML\r\n    private TextField races;\r\n    @FXML\r\n    private TextField wins;\r\n    @FXML\r\n    private ImageView horseImage;\r\n\r\n\r\n    private final String [] groups={\"A\",\"B\",\"C\",\"D\"};\r\n    int ID, Age ,Wins , TotalRace ;\r\n    String Name , Jockey , Group , Breed , raceRecord ;\r\n\r\n    int countA = 0;\r\n    int countB = 0;\r\n    int countC = 0;\r\n    int countD = 0;\r\n\r\n    private String imagePath;\r\n\r\n\r\n    @Override\r\n    public void initialize(URL location, ResourceBundle resources) {\r\n        // Initializing Groups A,B,C,D in check box\r\n        group.getItems().addAll(groups);\r\n    }\r\n\r\n    //Creating an Arraylist that contain all the details of horses and that arraylist can be access in all classes\r\n    public  static  ArrayList<ArrayList> WholeHorses = new ArrayList<>();\r\n\r\n\r\n    public void submit(ActionEvent event) {\r\n        // Getting count of the group in the first\r\n        GroupCount();\r\n\r\n        try {\r\n            ID = Integer.parseInt(id.getText());\r\n            Name = name.getText();\r\n            Jockey = jockey.getText();\r\n            Age = Integer.parseInt(age.getText());\r\n            Breed = breed.getText();\r\n            Wins = Integer.parseInt(wins.getText());\r\n            TotalRace = Integer.parseInt(races.getText());\r\n            Group = group.getValue();\r\n\r\n\r\n            boolean idExists = false;\r\n\r\n            for (ArrayList horse : WholeHorses) {\r\n                int id = (int) horse.getFirst();\r\n                if (id == ID) {\r\n                    idExists = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (idExists) {\r\n                Alert alert = new Alert(Alert.AlertType.WARNING);\r\n                alert.setTitle(\"ID is already there\");\r\n                alert.setHeaderText(null);\r\n                alert.setContentText(\"Already that Given id is there.  \\nChange the ID ...\");\r\n                alert.showAndWait();\r\n            } else {\r\n                if (WholeHorses.size()<20) {\r\n\r\n                    if (Wins <= TotalRace) {\r\n                        raceRecord = Wins + \" Wins in \" + TotalRace + \" races\";\r\n\r\n                        if (!imagePath.isEmpty()) {\r\n\r\n                            if (Group == \"A\") {\r\n                                if (countA < 5) {\r\n                                    HorseList(ID, Name, Jockey, Age, Breed, raceRecord, Group, imagePath);\r\n                                    resetFields();\r\n\r\n                                } else {\r\n                                    Alert alert = new Alert(Alert.AlertType.WARNING);\r\n                                    alert.setTitle(\"Group A is Full\");\r\n                                    alert.setHeaderText(null);\r\n                                    alert.setContentText(\"Only 5 horses for each group \");\r\n                                    alert.showAndWait();\r\n                                }\r\n\r\n                            } else if (Group.equals(\"B\")) {\r\n                                if (countB < 5) {\r\n                                    HorseList(ID, Name, Jockey, Age, Breed, raceRecord, Group, imagePath);\r\n                                    resetFields();\r\n                                } else {\r\n                                    Alert alert = new Alert(Alert.AlertType.WARNING);\r\n                                    alert.setTitle(\"Group B is Full\");\r\n                                    alert.setHeaderText(null);\r\n                                    alert.setContentText(\"Only 5 horses for each group \");\r\n                                    alert.showAndWait();\r\n                                }\r\n\r\n                            } else if (Group.equals(\"C\")) {\r\n                                if (countC < 5) {\r\n                                    HorseList(ID, Name, Jockey, Age, Breed, raceRecord, Group, imagePath);\r\n                                    resetFields();\r\n\r\n                                } else {\r\n                                    Alert alert = new Alert(Alert.AlertType.WARNING);\r\n                                    alert.setTitle(\"Group C is Full\");\r\n                                    alert.setHeaderText(null);\r\n                                    alert.setContentText(\"Only 5 horses for each group \");\r\n                                    alert.showAndWait();\r\n\r\n                                }\r\n\r\n                            } else if (Group.equals(\"D\")) {\r\n                                if (countD < 5) {\r\n                                    HorseList(ID, Name, Jockey, Age, Breed, raceRecord, Group, imagePath);\r\n                                    resetFields();\r\n\r\n                                } else {\r\n                                    Alert alert = new Alert(Alert.AlertType.WARNING);\r\n                                    alert.setTitle(\"Group D is Full\");\r\n                                    alert.setHeaderText(null);\r\n                                    alert.setContentText(\"Only 5 horses for each group \");\r\n                                    alert.showAndWait();\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n                        Alert alert = new Alert(Alert.AlertType.WARNING);\r\n                        alert.setTitle(\"Wrong input\");\r\n                        alert.setHeaderText(null);\r\n                        alert.setContentText(\"Wins Can't be higher than Total Races.\");\r\n                        alert.showAndWait();\r\n                    }\r\n                }else {\r\n                    Alert alert = new Alert(Alert.AlertType.WARNING);\r\n                    alert.setTitle(\"Limit Reached\");\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(\"Already passed limit. \\nMaximum 20 Horses can be addable .\");\r\n                    alert.showAndWait();\r\n                }\r\n            }\r\n\r\n        }catch (NumberFormatException e){\r\n            Alert alert = new Alert(Alert.AlertType.WARNING);\r\n            alert.setTitle(\"Wrong input / Blank\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Input should be validated. \\nDont leave Blank\");\r\n            alert.showAndWait();\r\n\r\n        }catch (NullPointerException e){\r\n            Alert alert = new Alert(Alert.AlertType.WARNING);\r\n            alert.setTitle(\"Image or Group is not selected\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Select Image or a Group that u missed \");\r\n            alert.showAndWait();\r\n        }\r\n        catch (Exception e){\r\n            System.out.println(e);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void HorseList(int ID,String Name , String Jockey, int Age ,String Breed,\r\n                           String raceRecord,String Group,String imagePath){\r\n\r\n        ArrayList horseDetails = new ArrayList();\r\n\r\n        horseDetails.add(ID);\r\n        horseDetails.add(Name);\r\n        horseDetails.add(Jockey);\r\n        horseDetails.add(Age);\r\n        horseDetails.add(Breed);\r\n        horseDetails.add(raceRecord);\r\n        horseDetails.add(Group);\r\n        horseDetails.add(imagePath);\r\n\r\n        WholeHorses.add(horseDetails);\r\n    }\r\n\r\n\r\n    @FXML\r\n    public void onChooseImageClick(ActionEvent event) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.getExtensionFilters().addAll(\r\n                new FileChooser.ExtensionFilter(\"Image Files\", \"*.png\", \"*.jpg\", \"*.gif\")\r\n        );\r\n        File selectedImageFile = fileChooser.showOpenDialog((Stage) ((Node) event.getSource()).getScene().getWindow());\r\n        if (selectedImageFile != null) {\r\n            try {\r\n                Image image = new Image(new FileInputStream(selectedImageFile));\r\n                horseImage.setImage(image);\r\n                imagePath = selectedImageFile.getAbsolutePath();\r\n                System.out.println(imagePath);\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void resetFields() {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(\"Submitted\");\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(\"Successfully Added horse Details .\");\r\n        alert.showAndWait();\r\n\r\n        countA = 0;\r\n        countB = 0;\r\n        countC = 0;\r\n        countD = 0;\r\n\r\n        id.clear();\r\n        age.clear();\r\n        wins.clear();\r\n        races.clear();\r\n        name.clear();\r\n        jockey.clear();\r\n        breed.clear();\r\n        group.getSelectionModel().clearSelection();\r\n\r\n        horseImage.setImage(null);\r\n        imagePath = null;\r\n\r\n    }\r\n\r\n    // For J-unit changed to Protected.\r\n    protected void GroupCount(){\r\n        for (ArrayList<Object> horse : WholeHorses) {\r\n            String GROUP = (String) horse.get(6);\r\n\r\n\r\n            switch (GROUP) {\r\n                case \"A\" :\r\n                    countA += 1;\r\n                    break;\r\n                case \"B\" :\r\n                    countB += 1;\r\n                    break;\r\n                case \"C\" :\r\n                    countC += 1;\r\n                    break;\r\n                case \"D\" :\r\n                    countD += 1;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Java_coursework/Adding_Horse.java b/src/main/java/Java_coursework/Adding_Horse.java
--- a/src/main/java/Java_coursework/Adding_Horse.java	(revision 071c1ff039a96024850f7cf42a47884471046306)
+++ b/src/main/java/Java_coursework/Adding_Horse.java	(date 1714846033905)
@@ -192,8 +192,6 @@
         catch (Exception e){
             System.out.println(e);
         }
-
-
     }
 
     private void HorseList(int ID,String Name , String Jockey, int Age ,String Breed,
@@ -259,8 +257,7 @@
 
     }
 
-    // For J-unit changed to Protected.
-    protected void GroupCount(){
+    private void GroupCount(){
         for (ArrayList<Object> horse : WholeHorses) {
             String GROUP = (String) horse.get(6);
 
